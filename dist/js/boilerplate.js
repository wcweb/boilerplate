/*!
 * Boilerplate v3.0.2 by @wcweb
 * Copyright 2013 wcweb.us.
 * Licensed under http://www.apache.org/licenses/LICENSE-2.0
 *
 * Designed and built with all the love in the world by @wcweb.
 */

if (typeof jQuery === "undefined") { throw new Error("It requires jQuery") }


var Rimifon = { 
    "Ads" : {}, 
    "NewFloatAd" : function(imgUrl, strLink) 
    { 
        var ad = document.createElement("a"); 
        ad.DirV = true; 
        ad.DirH = true; 
        ad.AutoMove = true; 
        ad.Image = new Image(); 
        ad.Seed = Math.random(); 
        ad.Timer = setInterval("Rimifon.Float(" + ad.Seed + ")", 50); 
        this.Ads[ad.Seed] = ad; 
        ad.Image.Parent = ad; 
        ad.style.position = "absolute"; 
        ad.style.left = 0; 
        ad.style.top = 0;
        ad.style.zIndex = 200;
        ad.Image.style.width = "197px";
        ad.Image.style.height = "197px";
        ad.Image.style.zIndex = 202;
        ad.Image.src = imgUrl; 
        ad.Image.onmouseover = function(){this.Parent.AutoMove = false;} 
        ad.Image.onmouseout = function(){this.Parent.AutoMove = true;} 
        if(strLink) 
        { 
            ad.href = strLink; 
            ad.Image.border = 0; 
            ad.target = "_blank"; 
        } 
        ad.appendChild(ad.Image); 
        $("#ad_banner").append(ad); 
        return ad; 
    }, 
    "Float" : function(floatId) 
    { 
        var ad = this.Ads[floatId]; 
        if(ad.AutoMove) 
        { 
            var curLeft = parseInt(ad.style.left); 
            var curTop = parseInt(ad.style.top); 
            if(ad.offsetWidth + curLeft > document.body.clientWidth + document.body.scrollLeft - 1) 
            { 
                curLeft = document.body.scrollLeft + document.body.clientWidth - ad.offsetWidth; 
                ad.DirH = false; 
            } 
            if(ad.offsetHeight + curTop > document.body.clientHeight + document.body.scrollTop - 1) 
            { 
                curTop = document.body.scrollTop + document.body.clientHeight - ad.offsetHeight; 
                ad.DirV = false; 
            } 
            if(curLeft < document.body.scrollLeft) 
            { 
                curLeft = document.body.scrollLeft; 
                ad.DirH = true; 
            } 
            if(curTop < document.body.scrollTop) 
            { 
                curTop = document.body.scrollTop; 
                ad.DirV = true; 
            } 
            ad.style.left = curLeft + (ad.DirH ? 1 : -1) + "px"; 
            ad.style.top = curTop + (ad.DirV ? 1 : -1) + "px"; 
        } 
    } 
} 

/*---------------------------------------------------------------------

Template Name:  lim.it
Version:        1.0
Release Date:   July 12, 2010

File:           lim.it.js
Updated:        2010-07-12

Copyright (c) 2010 Chanry Ian - http://wcweb.us

-----------------------------------------------------------------------

WARNING! DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING!

---------------------------------------------------------------------*/
// globle use 

// sometime you can preload some images
// imageObj = new Image();
// imgs = ["/static/style/img/toggle.gif", "/static/style/img/nyro/ajaxLoader.gif", "/static/style/img/nyro/prev.gif", "/static/style/img/nyro/next.gif"];
// for (i = 0; i <= imgs.length; i++) imageObj.src = imgs[i];

// lim object setup


if (!Limit) var Limit = {};

Limit.scrollToTop = function (e) {
    $(e).hide().removeAttr("href");
    if ($(window).scrollTop() != "0") {
        $(e).fadeIn("slow")
    }
    var scrollDiv = $(e);
    $(window).scroll(function () {
        if ($(window).scrollTop() == "0") {
            $(scrollDiv).fadeOut("slow")
        } else {
            $(scrollDiv).fadeIn("slow")
        }
    });
    $(e).click(function () {
        $("html, body").animate({
            scrollTop: 0
        }, "slow")
    })
}

Limit.setup = function () {
    // Open external link in new windows
    $('a[href^="http://"]').filter(function () {
        return this.hostname && this.hostname !== location.hostname;
    }).attr('target', '_blank');

    // build an animated footer
    $('#animated').each(function () {
        $(this).hover(function () {
            $(this).stop().animate({
                opacity: 0.9
            }, 400);
        }, function () {
            $(this).stop().animate({
                opacity: 0.0
            }, 200);
        });
    });



    // scroll to top on request
    if ($("a#totop").length) Limit.scrollToTop("a#totop");

    // setup content boxes
    if ($(".content-box").length) {
        $(".content-box .head").css({
            "cursor": "s-resize"
        });
        $(".content-box .body").slideUp();

        // Give the header in content-box a different cursor    
        $(".content-box .head").toggle(
        function () {
            var that = this;
            $(this).parent().find('.body').slideDown('slow', function () {
                $(that).find('.caption').toggleClass("content-box-closed");
            }); // Toggle the content     

        }, function () {
            var that = this;
            $(this).parent().find('.body').slideUp('slow', function () {
                $(that).find('.caption').toggleClass("content-box-closed");
            }); // Toggle the content

        });
    }

    // custom tooltips to replace the default browser tooltips for <a title=""> <div title=""> and <span title="">
    //$("a[title], div[title], span[title]").tipTip();
    // if($('.dropdown-toggle').length){
    //   $('.dropdown-toggle').dropdown();
    // }
    if ($(".collapse").length) {
        //$(".collapse").collapse();
    }

}






if ($('#list-grid-toggle').length) {
    $('.list-toggle-btn').click(function (e) {
        if ($(e.currentTarget).hasClass("list-toggle-btn-up")) {
            $(e.currentTarget).toggleClass("list-toggle-btn-on list-toggle-btn-up");
            $('.grid-toggle-btn').toggleClass("grid-toggle-btn-on grid-toggle-btn-up");

            $('#list-grid-toggle').addClass("videolist-heng");
        }
        e.preventDefault();

    });
    $('.grid-toggle-btn').click(function (e) {
        if ($(e.currentTarget).hasClass("grid-toggle-btn-up")) {
            $('.list-toggle-btn').toggleClass("list-toggle-btn-on list-toggle-btn-up");
            $(e.currentTarget).toggleClass("grid-toggle-btn-on grid-toggle-btn-up");

            $('#list-grid-toggle').removeClass("videolist-heng");
        }
        e.preventDefault();
    });
}

$(function () {
    $('.toggle-info').slideUp('fast');
    $('.toggle-info-btn').toggle(
        function () {
            var that = this;

            $("#" + $(this).attr('rel')).slideDown(
                'slow', function () {
                    $(that).children().html('隐藏信息');
                }

            );
        },
        function () {
            var that = this;
            $("#" + $(this).attr('rel')).slideUp(
                'fast', function () {
                    $(that).children().html('显示信息');
                }
            );
        }
        )
});
(function (doc) {
    var addEvent = 'addEventListener',
        type = 'gesturestart',
        qsa = 'querySelectorAll',
        scales = [1, 1],
        meta = qsa in doc ? doc[qsa]('meta[name=viewport]') : [];
    function fix() {
        meta.content = 'width=device-width,minimum-scale=' + scales[0] + ',maximum-scale=' + scales[1];
        doc.removeEventListener(type, fix, true);
    }
    if ((meta = meta[meta.length - 1]) && addEvent in doc) {
        fix();
        scales = [0.25, 1.6];
        doc[addEvent](type, fix, true);
    }
}(document));


function is_ie() {
    return (/MSIE/g).test(window.navigator.userAgent);
}

//Plugin start
(function ($) {
    var methods =
      {
          init: function (options) {
              return this.each(function () {
                  var _this = $(this);
                  _this.data('marquee', options);
                  var _li = $('>li', _this);

                  _this.wrap('<div class="slide_container"></div>')
                       .height(_this.height())
                      .hover(function () { if ($(this).data('marquee').stop) { $(this).stop(true, false); } },
                             function () { if ($(this).data('marquee').stop) { $(this).marquee('slide'); } })
                       .parent()
                       .css({ position: 'relative', overflow: 'hidden', 'height': $('>li', _this).height() })
                       .find('>ul')
                       .css({ width: screen.width * 2, position: 'absolute' });

                  for (var i = 0; i < Math.ceil((screen.width * 3) / _this.width()) ; ++i) {
                      _this.append(_li.clone());
                  }

                  _this.marquee('slide');
              });
          },

          slide: function () {
              var $this = this;
              $this.animate({ 'left': $('>li', $this).width() * -1 },
                            $this.data('marquee').duration,
                            'swing',
                            function () {
                                $this.css('left', 0).append($('>li:first', $this));
                                $this.delay($this.data('marquee').delay).marquee('slide');

                            }
                           );

          }
      };

    $.fn.marquee = function (m) {
        var settings = {
            'delay': 2000,
            'duration': 900,
            'stop': true
        };

        if (typeof m === 'object' || !m) {
            if (m) {
                $.extend(settings, m);
            }

            return methods.init.apply(this, [settings]);
        }
        else {
            return methods[m].apply(this);
        }
    };
}
)(jQuery);

//Plugin end

//call
$(document).ready(
  function () { $('.slide').marquee({ delay: 3000 }); }
);


$(window).on('load resize', function () {

    //if (getInternetExplorerVersion() != 8.0) {
    //    var height = $(document).height() - $('#header').height() - $('#footer').height();
    //    $('.app-sidebar').height(height - 32);

    //}


});


function getInternetExplorerVersion()
    // Returns the version of Internet Explorer or a -1
    // (indicating the use of another browser).
{
    var rv = -1; // Return value assumes failure.
    if (navigator.appName == 'Microsoft Internet Explorer') {
        var ua = navigator.userAgent;
        var re = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");
        if (re.exec(ua) != null)
            rv = parseFloat(RegExp.$1);
    }
    return rv;
}

$(function () {
    if ($("#nav-category").length) {
        $(".nav-list:first a").click(function (e) {

            if ($(e.currentTarget).attr("data-target") !== undefined) {
                //be fix at start with in 
                $(".nav-list:first .nav-list .in").collapse("toggle");
                $(".nav-list:first .nav-list .collapse").filter(".in").collapse("hide");
            }
        })
    }

});
$(document).ready(
  function () {
      if ($(".flash_messages").children().filter("p").html() !== "message-here") {
          $(".flash_messages").fadeIn();
      }
  }
);


window.flash = function flash(str) {
    if($(".flash_messages")){
        var temp = $(".flash_messages").first().clone(true);
        $(temp).children().filter("p").html(str);
        $(".flash_messages").last().before($(temp));
        $(temp).fadeIn();
        setTimeout(function () {
            $(temp).fadeOut();
        }, 10000);
    }
    
}
// window.alert = function alert(str) {
//    flash(str);
// }



/*!
 * bootstrap-calendar plugin
 * Original author: @ahmontero
 * Licensed under the MIT license
 *
 * jQuery lightweight plugin boilerplate
 * Original author: @ajpiano
 * Further changes, comments: @addyosmani
 * Licensed under the MIT license
 */


// the semi-colon before the function invocation is a safety
// net against concatenated scripts and/or other plugins
// that are not closed properly.
;(function ($, window, document, undefined) {

    (function () {
        var cache = {};

        this.tmpl = function tmpl(str, data) {
            // Figure out if we're getting a template, or if we need to
            // load the template - and be sure to cache the result.
            var fn = !/\W/.test(str) ?
            cache[str] = cache[str] ||
            tmpl(document.getElementById(str).innerHTML) :

            // Generate a reusable function that will serve as a template
            // generator (and which will be cached).

            /*jshint -W054 */
            new Function("obj",
                "var p=[],print=function(){p.push.apply(p,arguments);};" +

            // Introduce the data as local variables using with(){}
            "with(obj){p.push('" +
            // Convert the template into pure JavaScript
            str
            .replace(/[\r\t\n]/g, " ")
            .split("<%").join("\t")
            .replace(/((^|%>)[^\t]*)'/g, "$1\r")
            .replace(/\t=(.*?)%>/g, "',$1,'")
            .split("\t").join("');")
            .split("%>").join("p.push('")
                .split("\r").join("\\'") + "');}return p.join('');");

            // Provide some basic currying to the user
            return data ? fn(data) : fn;
        };
    })();

    var pluginName = 'LiveScheduler',

    defaults = {
        weekStart: 1,
        msg_days: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        msg_months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        msg_today: 'Today',
            msg_events_today: 'Events Today', // when today click.
            url: "",
            currentday:null,
            events: null
        },// .aweek.btn-group>operator+date_id
        timeline_template = tmpl(
            '<div class=" timeline ">' +
            '<div class="operator"><ul class="nav nav-pills">' +
            '<li class="fast pre">' +
            '<a href="#" class="">上一周</a>' +
            '</li>' +
            '<li class="pre">' +
            '<a href="#" class="">&lt</a>' +
            '</li>' +
            '<li class="next">' +
            '<a href="#" class="">&gt</a>' +
            '</li>' +
            '<li class="fast next">' +
            '<a href="#" class="">下一周</a>' +
            '</li></ul></div></div>'),
        days_template = tmpl(
            '<ul class="nav nav-tabs" id="days_tabs">'+
            '<% for (var i = 0, length = seven_day.length; i < length; i ++) { %>' +
            '<li class="select_day select_by_<%= seven_day[i].format("D") %>" >' +
            '<a href="#d<%= seven_day[i].format("D") %>"  data-toggle="tab"><%= seven_day[i].format("dddd") %><br/> <%= seven_day[i].format("MM-DD") %></a>' +
            '</li>' +
            '<% } %>' +
            '</ul>'+

            '</ul>' ),


        events_list_template = '<div class="tab-content" id="accordion_event_table" >' +

        '<% for (var ix = 0, lengthx = seven_day_events.length; ix < lengthx; ix ++) { %>' +
        '<div class="tab-pane" id="d<%= r_days[ix].format("D") %>">' +
        '<% if (seven_day_events[ix].length>0){ %>' +
        '<table class="table live_table">'+
        '<thead><tr><th>课程名称</th><th>学科</th><th>授课时间</th><th>授课地点</th><th>状态</th><th>操作</th></tr></thead><tbody>' +
        '<% for (var jx = 0 ,sde=seven_day_events[ix][0], lengthy = seven_day_events[ix][0].LiveInfo.length; jx < lengthy; jx ++) { %>' +
        ' <tr class="event">' +

        '<td class="event_title">' +
        '<% if (sde.LiveInfo[jx].url  ){%><a href="' + '<%= sde.LiveInfo[jx].url%>"> <%= sde.LiveInfo[jx].title %></a> <%}else{%>' +
        '<%= sde.LiveInfo[jx].title %>'+
        '<% }%>' +
        '<td class="event_course"><%= sde.LiveInfo[jx].course %></td>' +
        '</td>'+
        '<td class="event_time"><%= sde.LiveInfo[jx].time%></td>' +
        '<td class="event_classroom"><%= sde.LiveInfo[jx].classroom%></td>' +//' <% if( sde.LiveInfo[jx].status !=null ){ %>'+
        ' <td style="background-color:<%= sde.LiveInfo[jx].color %>;">' +
        ' <%= sde.LiveInfo[jx].status %>' +
        ' </td>' +
                            '<td><a href="<%= sde.LiveInfo[jx].url ? sde.LiveInfo[jx].url : "#" %>"><%= sde.LiveInfo[jx].url_title %></a></td>' +//'<% } %>' +
                            ' </tr>' +
                            '<% } %>' +
                            '</tbody></table>' +//'no data'+
                            '<% } else { %>'+'当天没有直播信息！'+'<% }%>'+ 
                        '</div>'+ //end if
                        '<% } %>',// end for
                        daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],

                        today = new Date();

    // The actual plugin constructor

    function Plugin(element, options) {
        this.element = $(element);

        this.options = $.extend({}, defaults, options);

        this._defaults = defaults;
        this._name = pluginName;
        if(element) this.init();
    }

    Plugin.prototype.init = function () {
        // Place initialization logic here
        // You already have access to the DOM element and
        // the options via the instance, e.g. this.element
        // and this.options
        var now = moment();
        this.weekStart = this.options.weekStart || 1;
        this.othersParams = this.options.otherParams || '' ;
        this.url = this.options.url;
        this.paramsData =  getParameters(this.options.otherParams);
        this.currentday = this.options.currentday ? this.options.currentday: now;

       // console.log(this.currentday);
       this.renderCalendar(getSevenDays(this.currentday));

   };

   Plugin.prototype.renderCalendar = function (daylist) {
    $(this.element).contents().remove();

    var that = this;
    var elt = tmpl(events_list_template);
    this.calendar = $(days_template({
        seven_day: daylist
    })).appendTo(this.element);
    this.timeline = $(timeline_template({})).appendTo(this.element).on({
        click: $.proxy(this.click, this)
    });
    this.calendar.on({click:$.proxy(this.click,this)});

    this.paramsData.days = _.map(daylist, function (k) {
        return moment(k).utc().format();
    });

    $.ajax({
        type: "POST",
        url: this.url,
        data: this.paramsData,
            // crossDomain:true,
            dataType: "json",
            jsonp: false

        }).done(function (results) {
            //console.log(results);
            //if(typeof results == "object"){
            //  var res_dates= results.result;
            //    if (res_dates == undefined){return false;}
            //}
            //if(typeof results == "array"){
            //  var res_dates= results;
            //}
            var res_dates = results;
            if (res_dates.length > 0) {

              var req_days = _.map(daylist, function (k) {
                  return moment(k).utc().format();
              });

              that.events = _.map(req_days, function (req_date) {
                  return _.filter(res_dates, function (res) {
                    res.date= moment(res.date);
                    return res.date.date() == moment(req_date).date();
                }
                );

              });

              var v = {seven_day_events: that.events,r_days:daylist}
              //console.log(v);
              $(elt(v)).appendTo(that.element)

          }

          $("#days_tabs .select_by_" + moment(this.currentday).format("D") + " a").tab("show");
            //$("#d" + moment(this.currentday).format("D")).addClass("active");


        }).fail(function (jqXHR, textStatus, errorThrown) {
            // console.log(textStatus);
        });

    };

    Plugin.prototype.click = function (e) {
        e.stopPropagation();
        e.preventDefault();
        var target = $(e.target).closest('li');
        if (target.length == 1) {
            if (target.is('.pre')) {

                if (target.is('.fast')) {
                    this.currentday = moment(this.currentday).subtract('d', 7);
                    this.renderCalendar(getSevenDays(this.currentday));
                } else {
                    this.currentday = moment(this.currentday).subtract('d', 1);
                    this.renderCalendar(getSevenDays(this.currentday));
                }
            } else if (target.is('.next')) {

                if (target.is('.fast')) {
                    this.currentday = moment(this.currentday).add('d', 7);
                    this.renderCalendar(getSevenDays(this.currentday));
                } else {
                    this.currentday = moment(this.currentday).add('d', 1);
                    this.renderCalendar(getSevenDays(this.currentday));
                }

            } else if(target.is('.select_day')){
                $(target).children('a').tab("show");

                $($(target).children('a').attr("href")).children('.live_table').dataTable( {
                                                                                                                    //$('.live_table').dataTable( {
                                                                                                                        "bRetrieve":true,
                                                                                                                        "sDom": "<'row'<'span4'l><'span5 pull-right'f>r>t<'row'<'span4'i><'span5 pull-right'p>>",
                                                                                                                        "sPaginationType": "bootstrap",
                                                                                                                        "oLanguage": {
                                                                                                                            "sLengthMenu": "_MENU_ 条记录 每一页"
                                                                                                                        }
                                                                                                                    } );
}
}


};
var getParameters = function(url){
    var params = url.split("&"), i,val,resultes ={};
    for(i = 0; i< params.length;i++){
        val = params[i].split("=");
        resultes[val[0]] = escape(val[1]);
    }
    return resultes;
};
var getSevenDays = function (middleDay) {

    var daylist = [];
    var startDay = moment(middleDay).subtract('d', 4);
    _(7).times(function (n) {
            var ss = startDay.add('d', 1);// 
            daylist.push(moment(ss));

        });
    return daylist;
};

$.fn[pluginName] = function (options) {
    return this.each(function () {
        if (!$.data(this, 'plugin_' + pluginName)) {
            $.data(this, 'plugin_' + pluginName,
                new Plugin(this, options));
        }
    });
}

})(jQuery, window, document);
